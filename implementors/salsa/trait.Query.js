(function() {var implementors = {};
implementors["chalk_integration"] = [{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.ProgramTextQuery.html\" title=\"struct chalk_integration::query::ProgramTextQuery\">ProgramTextQuery</a>","synthetic":false,"types":["chalk_integration::query::ProgramTextQuery"]},{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.SolverChoiceQuery.html\" title=\"struct chalk_integration::query::SolverChoiceQuery\">SolverChoiceQuery</a>","synthetic":false,"types":["chalk_integration::query::SolverChoiceQuery"]},{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.ProgramIrQuery.html\" title=\"struct chalk_integration::query::ProgramIrQuery\">ProgramIrQuery</a>","synthetic":false,"types":["chalk_integration::query::ProgramIrQuery"]},{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.CoherenceQuery.html\" title=\"struct chalk_integration::query::CoherenceQuery\">CoherenceQuery</a>","synthetic":false,"types":["chalk_integration::query::CoherenceQuery"]},{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.OrphanCheckQuery.html\" title=\"struct chalk_integration::query::OrphanCheckQuery\">OrphanCheckQuery</a>","synthetic":false,"types":["chalk_integration::query::OrphanCheckQuery"]},{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.CheckedProgramQuery.html\" title=\"struct chalk_integration::query::CheckedProgramQuery\">CheckedProgramQuery</a>","synthetic":false,"types":["chalk_integration::query::CheckedProgramQuery"]},{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.EnvironmentQuery.html\" title=\"struct chalk_integration::query::EnvironmentQuery\">EnvironmentQuery</a>","synthetic":false,"types":["chalk_integration::query::EnvironmentQuery"]},{"text":"impl Query for <a class=\"struct\" href=\"chalk_integration/query/struct.SolverQuery.html\" title=\"struct chalk_integration::query::SolverQuery\">SolverQuery</a>","synthetic":false,"types":["chalk_integration::query::SolverQuery"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()